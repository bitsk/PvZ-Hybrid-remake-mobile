name: Godot Multi-Platform Build & Export

on:
  workflow_dispatch:
env:
  GODOT_VERSION: 4.4.1
  APP_NAME: "植物大战僵尸杂交版"
  APP_VER: "0.3"

jobs:

  # 1. 下载导出模板（示例只示范linux x86_64/arm64和iOS几个，Android可同理）
  download-export-templates:
    runs-on: ubuntu-latest
    outputs:
      linux_x86_64_artifact: export-templates-linux-x86_64.zip
      linux_arm64_artifact: export-templates-linux-arm64.zip
      ios_artifact: export-templates-ios.zip
    steps:
      - name: Download Export Template
        run: |
          wget -q https://github.com/godotengine/godot/releases/download/4.4.1-stable/Godot_v${{ env.GODOT_VERSION }}-stable_export_templates.tpz
          unzip Godot_v${{ env.GODOT_VERSION }}-stable_export_templates.tpz
          mv Godot_v${{ env.GODOT_VERSION }}-stable_export_templates/templates . && rm Godot_v${{ env.GODOT_VERSION }}-stable_export_templates* -rf
          pushd templates && rm windows* linux_debug* && popd
    
      - name: Upload Android artifact
        uses: actions/upload-artifact@v4
        with:
          name: export-templates
          path: templates/
                 
  # 2. 准备Godot项目工程：解压ZIP，找到PCK，使用gdsdecomp还原项目
  prepare-godot-project:
    runs-on: ubuntu-latest
    outputs:
      godot_project_artifact: godot-project.zip
      pck_file_path: ${{ steps.find_pck.outputs.pck_path }}
      version: ${{ steps.set_version.outputs.version }}
    steps:
      - name: Download Release ZIP and Extract Version Number
        id: set_version
        run: |
          wget -q https://github.com/kero990/PvZ-Hybrid-remake-mobile/releases/download/v0.3/v0.3.zip
          unzip -q v0.3.zip -d extracted
          mv extracted/*/* extracted/
          rm extracted/*.exe
          PCK_PATH=$(find extracted -name "*.pck" | head -n1)
          if [ -z "$PCK_PATH" ]; then
            echo "No .pck file found!"
            exit 1
          fi
          echo "pck_path=$PCK_PATH" >> $GITHUB_OUTPUT

      - name: Clone gdsdecomp for PCK decompilation
        run: |
          wget -q https://github.com/GDRETools/gdsdecomp/releases/download/v1.0.0-rc.3/GDRE_tools-v1.0.0-rc.3-linux.zip
          unzip GDRE_tools-v1.0.0-rc.3-linux.zip -d gdre
          chmod +x gdre/gdre_tools.x86_64
          gdre/gdre_tools.x86_64 --headless --recover={{ steps.find_pck.outputs.pck_path }} --output=pvz-project
          
      - name: Upload Android artifact
        uses: actions/upload-artifact@v4
        with:
          name: pvz-project
          path: pvz-project/
          
      - name: Upload Android artifact
        uses: actions/upload-artifact@v4
        with:
          name: pck-file
          path: $PCK_PATH

  # 3. Linux导出任务 示例只基于 linux_x86_64 模板和 pck 打包
  export-linux:
    runs-on: ubuntu-latest
    needs:
      - download-export-templates
      - prepare-godot-project
    container:
      image: debian:10
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Download Export Template artifact
        uses: actions/download-artifact@v4
        with:
          name: export-templates
          path: ./export_templates

      - name: Unzip Export Template
        run: unzip ./export_templates/export-templates.zip -d ./export_templates
        
      - name: Download pck-file
        uses: actions/download-artifact@v4
        with:
          name: pck-file
          path: ./pckfile

      - name: pre deb file
        run: |
          # 打包x86_64 deb
          mkdir -p deb/DEBIAN
          mkdir -p deb/opt/apps/com.pvzhe.hybrid-remake/files
          mkdir -p deb/opt/apps/com.pvzhe.hybrid-remake/entries/applications
          mkdir -p deb/opt/apps/com.pvzhe.hybrid-remake/entries/icons/hicolor/128x128/apps
          sed -i s@VERSION@$APP_VER@G assets/control
          sed -i s@amd64@ARCH@g assets/info
          sed -i s@VERSION@$APP_VER@G assets/info
          sed -i s@amd64@ARCH@g assets/control
          chmod +x assets/run.sh
          echo './linux_release.arm64 --main-pack 植物大战僵尸杂交版v0.3发布版.pck $@' >> assets/run.sh
          PCK_PATH=$(find pckfile -name "*.pck" | head -n1)
          cp $PCK_PATH deb/opt/apps/com.pvzhe.hybrid-remake/files
          cp assets/run.sh deb/opt/apps/com.pvzhe.hybrid-remake/files
          cp ./export_templates/templates/linux_release.x86_64 deb/opt/apps/com.pvzhe.hybrid-remake/files
          cp assets/com.pvzhe.hybrid-remake.png deb/opt/apps/com.pvzhe.hybrid-remake/entries/icons/hicolor/128x128/apps
          cp assets/control deb/DEBIAN
          cp assets/com.pvzhe.hybrid-remake.desktop deb/opt/apps/com.pvzhe.hybrid-remake/entries/applications
          cp assets/info deb/opt/apps/com.pvzhe.hybrid-remake
          dpkg-deb -b deb/
          mv deb.deb com.pvzhe.hybrid-remake_0.3_amd64.deb
          
          # 打包arm64 deb
          sed -i s@arm64@amd64@g deb/opt/apps/com.pvzhe.hybrid-remake/info
          sed -i s@arm64@amd64@g deb/DEBIAN/control
          rm deb/opt/apps/com.pvzhe.hybrid-remake/files/linux_release.x86_64
          cp ./export_templates/templates/linux_release.arm64 deb/opt/apps/com.pvzhe.hybrid-remake/files
          sed -i s@x86_64@arm64@g deb/opt/apps/com.pvzhe.hybrid-remake/files/run.sh
          dpkg-deb -b deb/
          mv deb.deb com.pvzhe.hybrid-remake_0.3_arm64.deb
          
      - name: Upload Linux build to Release
        uses: softprops/action-gh-release@v1
        with:
          files: ./*.deb # 指定要上传的文件
          tag_name: v$APP_VER 
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}    
        
  # 4. Android 导出任务 示例，使用反编译工程，需根据实际环境配置签名等参数
  export-android:
    runs-on: ubuntu-latest
    needs:
      - download-export-templates
      - prepare-godot-project
    steps:
      - name: Setup Java & Android SDK
        uses: android-actions/setup-android@v2

      - name: Download Export Templates Android (示例需要添加相应下载Job)
        uses: actions/download-artifact@v4
        with:
          name: export-templates-android
          path: ./export_templates_android

      - name: Download Godot project artifact
        uses: actions/download-artifact@v4
        with:
          name: godot-project
          path: ./godot_project.zip

      - name: Unzip Godot project
        run: unzip pvz_project.zip -d ./pvz_project

      - name: Godot Android Export
        run: |
          godot --path ./godot_project --export "Android" exported.apk

      - name: Upload Android artifact
        uses: actions/upload-artifact@v3
        with:
          name: android-build
          path: exported.apk


  # 5. iOS 导出任务 示例，同样使用完整Godot项目
  export-ios:
    runs-on: macos-latest
    needs:
      - download-export-templates
      - prepare-godot-project
    steps:
      - name: Download Export Templates iOS artifact
        uses: actions/download-artifact@v3
        with:
          name: export-templates-ios
          path: ./export_templates_ios

      - name: Unzip Export Template
        run: unzip ./export_templates_ios/export-templates-ios.zip -d ./export_templates_ios

      - name: Download Godot project artifact
        uses: actions/download-artifact@v3
        with:
          name: godot-project
          path: ./godot_project.zip

      - name: Unzip Godot project
        run: unzip godot_project.zip -d ./godot_project

      - name: Setup Godot iOS Export (请根据实际需求调整)
        uses: dulvui/godot4-ios-export@v1
        with:
          godot-version: ${{ env.GODOT_VERSION }}

      - name: Godot iOS Export
        run: godot --path ./godot_project --export "iOS" exported.xcodeproj

      - name: Upload iOS Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ios-build
          path: exported.xcodeproj

  # 6. macOS 导出任务 示例，直接模板+PCK方式打包
  export-macos:
    runs-on: macos-latest
    needs:
      - download-export-templates
      - prepare-godot-project
    steps:
      - name: Download MacOS Export Template artifact
        uses: actions/download-artifact@v3
        with:
          name: export-templates-macos
          path: ./export_templates_macos

      - name: Unzip MacOS Export Template
        run: unzip ./export_templates_macos/export-templates-macos.zip -d ./export_templates_macos

      - name: Copy executable and PCK
        run: |
          cp ./export_templates_macos/export_templates/macos_release "./${{ env.APP_NAME }}.app"
          cp ${{ needs.prepare-godot-project.outputs.pck_file_path }} .

      - name: Zip macOS package
        run: zip -r "${{ env.APP_NAME }}_macos_${{ needs.prepare-godot-project.outputs.version }}.zip" "${{ env.APP_NAME }}.app" *.pck

      - name: Upload macOS artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          path: ${{ env.APP_NAME }}_macos_*.zip
