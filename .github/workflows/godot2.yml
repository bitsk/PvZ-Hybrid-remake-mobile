name: Godot Export

on:
  workflow_dispatch:
env:
  GODOT_VERSION: 4.4.1
  APP_NAME: "植物大战僵尸杂交版"
  APP_VER: "0.5.1"
permissions:
  contents: write
jobs:
  export-linux:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          apt-get update && apt-get install -y \
            curl unzip p7zip-full make dpkg \
            ca-certificates
        shell: bash

      - name: Download repacked PCKs (normal + GL)
        run: |
          set -e
          curl -L --retry 5 --retry-delay 5 --fail --continue-at - -o pvz.pck https://blob.bits.ink/pvz/v0.5.1/pvz.pck
          curl -L --retry 5 --retry-delay 5 --fail --continue-at - -o pvz_gl.pck https://blob.bits.ink/pvz/v0.5.1/pvz-gl.pck
          test -s ./pvz.pck
          test -s ./pvz_gl.pck
        shell: bash

      - name: Download Linux export templates
        run: |
          set -e
          curl -L --retry 5 --retry-delay 5 --fail --continue-at - -o templates.tpz https://github.com/godotengine/godot/releases/download/${GODOT_VERSION}-stable/Godot_v${GODOT_VERSION}-stable_export_templates.tpz
          unzip -o templates.tpz
          rm -f templates.tpz
          rm -f templates/android* templates/ios.zip templates/macos.zip templates/web* templates/win* templates/linux_debug*
          curl -L --retry 5 --retry-delay 5 --fail --continue-at - -o riscv.7z https://gitee.com/openkylin/godot-riscv/releases/download/4.4/godot.linuxbsd.template_release.rv64.llvm.7z
          7z x -y riscv.7z
          mv godot.linuxbsd.template_release.rv64.llvm templates/linux_release.rv64
          rm -f riscv.7z
        shell: bash

      - name: Create deb packages
        run: |
          set -e
          ls . && ls ./assets
          mkdir -p releases
          # 为 amd64/arm64/riscv64 三个架构分别打包（发布版与兼容版），二进制与 PCK 分离
          for arch in amd64 arm64 riscv64; do
            if [ "$arch" = "amd64" ]; then bin_name=linux_release.x86_64; fi
            if [ "$arch" = "arm64" ]; then bin_name=linux_release.arm64; fi
            if [ "$arch" = "riscv64" ]; then bin_name=linux_release.rv64; fi
            for flavor in "" "_gl"; do
              workdir=deb_${arch}${flavor}
              rm -rf "$workdir"
              mkdir -p "$workdir/DEBIAN"
              mkdir -p "$workdir/opt/apps/com.pvzhe.hybrid-remake/files"
              mkdir -p "$workdir/opt/apps/com.pvzhe.hybrid-remake/entries/applications"
              mkdir -p "$workdir/opt/apps/com.pvzhe.hybrid-remake/entries/icons/hicolor/128x128/apps"
              # control/info 基于模板复制后替换
              cp assets/deb/control "$workdir/DEBIAN/control"
              cp assets/deb/info "$workdir/opt/apps/com.pvzhe.hybrid-remake/info"
              sed -i s@VERSION@$APP_VER@g "$workdir/DEBIAN/control"
              sed -i s@VERSION@$APP_VER@g "$workdir/opt/apps/com.pvzhe.hybrid-remake/info"
              sed -i s@ARCH@${arch}@g "$workdir/DEBIAN/control"
              sed -i s@ARCH@${arch}@g "$workdir/opt/apps/com.pvzhe.hybrid-remake/info"
              # 复制资源与桌面文件
              cp assets/deb/com.pvzhe.hybrid-remake.png "$workdir/opt/apps/com.pvzhe.hybrid-remake/entries/icons/hicolor/128x128/apps"
              cp assets/deb/com.pvzhe.hybrid-remake.desktop "$workdir/opt/apps/com.pvzhe.hybrid-remake/entries/applications"
              # 复制运行脚本（使用 --main-pack 指定 PCK）
              cp assets/deb/run.sh "$workdir/opt/apps/com.pvzhe.hybrid-remake/files/run.sh"
              chmod +x "$workdir/opt/apps/com.pvzhe.hybrid-remake/files/run.sh"
              if [ "$flavor" = "_gl" ]; then pack_file=pvz_gl.pck; else pack_file=pvz.pck; fi
              echo "./${bin_name} --main-pack ${pack_file} \$@" >> "$workdir/opt/apps/com.pvzhe.hybrid-remake/files/run.sh"
              # 复制模板二进制与 PCK（分离放置）
              cp ./templates/${bin_name} "$workdir/opt/apps/com.pvzhe.hybrid-remake/files/${bin_name}"
              chmod +x "$workdir/opt/apps/com.pvzhe.hybrid-remake/files/${bin_name}"
              cp ./${pack_file} "$workdir/opt/apps/com.pvzhe.hybrid-remake/files/${pack_file}"
              # 构建 deb
              dpkg-deb -b "$workdir"
              out_name="com.pvzhe.hybrid-remake_${APP_VER}_${arch}"
              if [ "$flavor" = "_gl" ]; then out_name="${out_name}_gl"; fi
              mv ${workdir}.deb ${out_name}.deb
              mv ${out_name}.deb releases/
            done
          done
      - name: Upload Release    
        uses: ncipollo/release-action@v1
        with:
           allowUpdates: true
           artifacts: >
             ./releases/*
           body: "由官方发布版移植而来，包含 Linux (amd64, arm64, riscv64) 与 GL 兼容变体。"
           name: ${{ env.APP_VER }}
           tag: ${{ env.APP_VER }}
           token: ${{ secrets.GITHUB_TOKEN }}
