name: Godot Export

on:
  workflow_dispatch:
env:
  GODOT_VERSION: 4.4
  APP_NAME: "植物大战僵尸杂交版"
  APP_VER: "0.3"
permissions:
  contents: write
jobs:
         
  prepare-godot-project:
    runs-on: ubuntu-latest
    steps:
      - run: mkdir pck-file
      - run: |
          wget -q https://github.com/kero990/PvZ-Hybrid-remake-mobile/releases/download/v0.3/v0.3.zip
          unzip v0.3.zip
          PCK_PATH=$(find . -name "*.pck" | head -n1)
          echo "PCK_PATH=$(find . -name "*.pck" | head -n1)" >> $GITHUB_ENV
          wget -q https://github.com/GDRETools/gdsdecomp/releases/download/v1.0.0-rc.3/GDRE_tools-v1.0.0-rc.3-linux.zip
          unzip GDRE_tools-v1.0.0-rc.3-linux.zip
          chmod +x gdre_tools.x86_64
          mkdir pvz-project
          cp $PCK_PATH ./pvz.pck
          ./gdre_tools.x86_64 --headless --recover=./pvz.pck --output=./pvz-project
          
      - name: Upload Project Artifact
        uses: actions/upload-artifact@v4
        with:
          name: pvz-project
          path: pvz-project/
          
      - name: Upload PCK File Artifact
        uses: actions/upload-artifact@v4
        with:
          name: pck-file
          path: "${{ env.PCK_PATH }}"
    
  export_game_android:
     runs-on: ubuntu-latest
     needs:
      - prepare-godot-project
     steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Setup Java & Android SDK
        uses: android-actions/setup-android@v2
      - run: mkdir ./pvz-project && mkdir releases
      - name: Download Godot project artifact
        uses: actions/download-artifact@v4
        with:
          name: pvz-project
          path: ./pvz-project
      - run: cp assets/export_presets.cfg ./pvz-project
      - name: export game
        id: export
        uses: firebelley/godot-export@v6.0.0
        with:
          godot_executable_download_url: https://github.com/godotengine/godot/releases/download/${{ env.GODOT_VERSION }}-stable/Godot_v${{ env.GODOT_VERSION }}-stable_linux.x86_64.zip
          godot_export_templates_download_url: https://github.com/godotengine/godot/releases/download/${{ env.GODOT_VERSION }}-stable/Godot_v${{ env.GODOT_VERSION }}-stable_export_templates.tpz
          relative_project_path: ./pvz-project/
          relative_export_path: ./releases
          presets_to_export: Android
      - run: find releases/ -name "*.apk" -exec mv {} releases/PlantsVsZombies_Hybrid_0.3.apk \;
      - name: Upload Project Artifact
        uses: actions/upload-artifact@v4
        with:
          name: android
          path: ./releases/*.apk
          
  export_game_apple:
     runs-on: macos-latest
     needs:
      - prepare-godot-project
     steps:
      - name: checkout
        uses: actions/checkout@v4
      - run: mkdir ./pvz-project && mkdir releases
      - name: Download Godot project artifact
        uses: actions/download-artifact@v4
        with:
          name: pvz-project
          path: ./pvz-project
      - run: cp assets/export_presets.cfg ./pvz-project
      - name: export game mac
        uses: firebelley/godot-export@v6.0.0
        with:
          godot_executable_download_url: https://github.com/godotengine/godot/releases/download/${{ env.GODOT_VERSION }}-stable/Godot_v${{ env.GODOT_VERSION }}-stable_macos.universal.zip
          godot_export_templates_download_url: https://github.com/godotengine/godot/releases/download/${{ env.GODOT_VERSION }}-stable/Godot_v${{ env.GODOT_VERSION }}-stable_export_templates.tpz
          relative_project_path: ./pvz-project/
          relative_export_path: ./releases
          presets_to_export: 'macOS'
          
      - name: export game ios
        uses: firebelley/godot-export@v6.0.0
        if: false #由于没有苹果开发者账户，无法导出ios版本
        with:
          godot_executable_download_url: https://github.com/godotengine/godot/releases/download/${{ env.GODOT_VERSION }}-stable/Godot_v${{ env.GODOT_VERSION }}-stable_macos.universal.zip
          godot_export_templates_download_url: https://github.com/godotengine/godot/releases/download/${{ env.GODOT_VERSION }}-stable/Godot_v${{ env.GODOT_VERSION }}-stable_export_templates.tpz
          relative_project_path: ./pvz-project/
          relative_export_path: ./releases
          presets_to_export: 'iOS' 
          export_debug: true
      - run:  find releases/ -name "*.zip" -exec mv {} releases/PlantsVsZombies_Hybrid_0.3_MacOS.zip \;
      - name: Upload Project Artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos
          path: ./releases/*.zip
          
  export-linux:
    runs-on: ubuntu-latest
    needs:
      - prepare-godot-project
      - export_game_android
      - export_game_apple
    container:
      image: debian:10
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - run: mkdir pck-file
                
      - name: Download pck-file
        uses: actions/download-artifact@v4
        with:
          name: pck-file
          path: ./pck-file

      - name: Unzip Export Template
        run: |
          sed -i s@deb.debian@archive.debian@g /etc/apt/sources.list
          apt update && apt install unzip wget curl git make dpkg -y
          wget https://github.com/godotengine/godot/releases/download/${{ env.GODOT_VERSION }}-stable/Godot_v${{ env.GODOT_VERSION }}-stable_export_templates.tpz
          unzip Godot_v${{ env.GODOT_VERSION }}-stable_export_templates.tpz
          rm  *.tpz
          cd templates && rm android* ios.zip macos.zip web* win* linux_debug* -f 
      - name: pre deb file
        run: |
          # 打包x86_64 deb
          ls . && ls ./assets
          mkdir -p deb/DEBIAN
          mkdir -p deb/opt/apps/com.pvzhe.hybrid-remake/files
          mkdir -p deb/opt/apps/com.pvzhe.hybrid-remake/entries/applications
          mkdir -p deb/opt/apps/com.pvzhe.hybrid-remake/entries/icons/hicolor/128x128/apps
          sed -i s@VERSION@$APP_VER@g assets/deb/control
          sed -i s@amd64@ARCH@g assets/deb/info
          sed -i s@VERSION@$APP_VER@g assets/deb/info
          sed -i s@amd64@ARCH@g assets/deb/control
          chmod +x assets/deb/run.sh
          echo './linux_release.arm64 --main-pack 植物大战僵尸杂交版v0.3发布版.pck $@' >> assets/run.sh
          PCK_PATH=$(find pck-file -name "*.pck" | head -n1)
          cp $PCK_PATH deb/opt/apps/com.pvzhe.hybrid-remake/files
          cp assets/deb/run.sh deb/opt/apps/com.pvzhe.hybrid-remake/files
          chmod +x ./templates/linux_release*
          cp ./templates/linux_release.x86_64 deb/opt/apps/com.pvzhe.hybrid-remake/files
          cp assets/deb/com.pvzhe.hybrid-remake.png deb/opt/apps/com.pvzhe.hybrid-remake/entries/icons/hicolor/128x128/apps
          cp assets/deb/control deb/DEBIAN
          cp assets/deb/com.pvzhe.hybrid-remake.desktop deb/opt/apps/com.pvzhe.hybrid-remake/entries/applications
          cp assets/deb/info deb/opt/apps/com.pvzhe.hybrid-remake
          dpkg-deb -b deb/
          mv deb.deb com.pvzhe.hybrid-remake_${{ env.APP_VER }}_amd64.deb
          
          # 打包arm64 deb
          sed -i s@amd64@arm64@g deb/opt/apps/com.pvzhe.hybrid-remake/info
          sed -i s@amd64@arm64@g deb/DEBIAN/control
          rm deb/opt/apps/com.pvzhe.hybrid-remake/files/linux_release.x86_64
          cp ./templates/linux_release.arm64 deb/opt/apps/com.pvzhe.hybrid-remake/files
          sed -i s@x86_64@arm64@g deb/opt/apps/com.pvzhe.hybrid-remake/files/run.sh
          dpkg-deb -b deb/
          mv deb.deb com.pvzhe.hybrid-remake_${{ env.APP_VER }}_arm64.deb
          mkdir releases && mv *.deb releases/
          
      - name: Download android release
        uses: actions/download-artifact@v4
        with:
          name: android
          path: ./releases 
          
      - name: Download other release
        uses: actions/download-artifact@v4
        with:
          name: macos
          path: ./releases        
          
      - name: Upload Release    
      - uses: ncipollo/release-action@v1
        with:
           allowUpdates: true
           artifacts: >
             ./releases/*
           body: "由官方发布版移植而来，包括linux(arm64,x86_64)，Android和MacOS，因为没有开发者账户，所以暂时没有IOS"
           name: v${{ env.APP_VER }}
           tag: v${{ env.APP_VER }}
           token: ${{ secrets.GITHUB_TOKEN }}
